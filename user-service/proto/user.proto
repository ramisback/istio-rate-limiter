syntax = "proto3";

package user;

option go_package = "github.com/ramisback/istio-rate-limiter/user-service/proto";

import "google/protobuf/timestamp.proto";

// UserService provides user management functionality
service UserService {
  // CreateUser creates a new user
  rpc CreateUser(CreateUserRequest) returns (User) {}
  // GetUser retrieves a user by ID
  rpc GetUser(GetUserRequest) returns (User) {}
  // UpdateUser updates an existing user
  rpc UpdateUser(UpdateUserRequest) returns (User) {}
  // DeleteUser deletes a user
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
  // ValidateCredentials validates user credentials
  rpc ValidateCredentials(ValidateCredentialsRequest) returns (ValidateCredentialsResponse) {}
}

// User represents a user in the system
message User {
  string id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  string role = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

// CreateUserRequest represents a request to create a new user
message CreateUserRequest {
  string email = 1;
  string password = 2;
  string first_name = 3;
  string last_name = 4;
  string role = 5;
}

// GetUserRequest represents a request to get a user by ID
message GetUserRequest {
  string id = 1;
}

// UpdateUserRequest represents a request to update a user
message UpdateUserRequest {
  string id = 1;
  string email = 2;
  string password = 3;
  string first_name = 4;
  string last_name = 5;
}

// DeleteUserRequest represents a request to delete a user
message DeleteUserRequest {
  string id = 1;
}

// DeleteUserResponse represents a response to a delete user request
message DeleteUserResponse {}

// ValidateCredentialsRequest represents a request to validate user credentials
message ValidateCredentialsRequest {
  string email = 1;
  string password = 2;
}

// ValidateCredentialsResponse represents a response to a validate credentials request
message ValidateCredentialsResponse {
  bool valid = 1;
  User user = 2;
} 